// Generated by view binder compiler. Do not edit!
package com.example.myrecipebook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myrecipebook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDelegationBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button buttonSendSMS;

  @NonNull
  public final ProgressBar delegationProgressBar;

  @NonNull
  public final RecyclerView delegationRecyclerView;

  @NonNull
  public final TextView delegationSubtitle;

  @NonNull
  public final TextView delegationTitle;

  @NonNull
  public final EditText editTextPhoneNumber;

  @NonNull
  public final LinearLayout phoneInputLayout;

  private ActivityDelegationBinding(@NonNull RelativeLayout rootView, @NonNull Button buttonSendSMS,
      @NonNull ProgressBar delegationProgressBar, @NonNull RecyclerView delegationRecyclerView,
      @NonNull TextView delegationSubtitle, @NonNull TextView delegationTitle,
      @NonNull EditText editTextPhoneNumber, @NonNull LinearLayout phoneInputLayout) {
    this.rootView = rootView;
    this.buttonSendSMS = buttonSendSMS;
    this.delegationProgressBar = delegationProgressBar;
    this.delegationRecyclerView = delegationRecyclerView;
    this.delegationSubtitle = delegationSubtitle;
    this.delegationTitle = delegationTitle;
    this.editTextPhoneNumber = editTextPhoneNumber;
    this.phoneInputLayout = phoneInputLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDelegationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDelegationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_delegation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDelegationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSendSMS;
      Button buttonSendSMS = ViewBindings.findChildViewById(rootView, id);
      if (buttonSendSMS == null) {
        break missingId;
      }

      id = R.id.delegation_progress_bar;
      ProgressBar delegationProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (delegationProgressBar == null) {
        break missingId;
      }

      id = R.id.delegation_recycler_view;
      RecyclerView delegationRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (delegationRecyclerView == null) {
        break missingId;
      }

      id = R.id.delegation_subtitle;
      TextView delegationSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (delegationSubtitle == null) {
        break missingId;
      }

      id = R.id.delegation_title;
      TextView delegationTitle = ViewBindings.findChildViewById(rootView, id);
      if (delegationTitle == null) {
        break missingId;
      }

      id = R.id.editTextPhoneNumber;
      EditText editTextPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (editTextPhoneNumber == null) {
        break missingId;
      }

      id = R.id.phone_input_layout;
      LinearLayout phoneInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (phoneInputLayout == null) {
        break missingId;
      }

      return new ActivityDelegationBinding((RelativeLayout) rootView, buttonSendSMS,
          delegationProgressBar, delegationRecyclerView, delegationSubtitle, delegationTitle,
          editTextPhoneNumber, phoneInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
