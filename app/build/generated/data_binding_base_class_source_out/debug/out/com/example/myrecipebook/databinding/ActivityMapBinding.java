// Generated by view binder compiler. Do not edit!
package com.example.myrecipebook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myrecipebook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton buttonPickLocation;

  @NonNull
  public final Button buttonSaveStore;

  @NonNull
  public final Button buttonViewSaved;

  @NonNull
  public final EditText editTextLocation;

  @NonNull
  public final EditText editTextStoreName;

  @NonNull
  public final RecyclerView historyRecyclerView;

  @NonNull
  public final LinearLayout historySection;

  @NonNull
  public final LinearLayout inputSection;

  @NonNull
  public final FragmentContainerView mapActivity;

  private ActivityMapBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton buttonPickLocation, @NonNull Button buttonSaveStore,
      @NonNull Button buttonViewSaved, @NonNull EditText editTextLocation,
      @NonNull EditText editTextStoreName, @NonNull RecyclerView historyRecyclerView,
      @NonNull LinearLayout historySection, @NonNull LinearLayout inputSection,
      @NonNull FragmentContainerView mapActivity) {
    this.rootView = rootView;
    this.buttonPickLocation = buttonPickLocation;
    this.buttonSaveStore = buttonSaveStore;
    this.buttonViewSaved = buttonViewSaved;
    this.editTextLocation = editTextLocation;
    this.editTextStoreName = editTextStoreName;
    this.historyRecyclerView = historyRecyclerView;
    this.historySection = historySection;
    this.inputSection = inputSection;
    this.mapActivity = mapActivity;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_map, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_pick_location;
      ImageButton buttonPickLocation = ViewBindings.findChildViewById(rootView, id);
      if (buttonPickLocation == null) {
        break missingId;
      }

      id = R.id.button_save_store;
      Button buttonSaveStore = ViewBindings.findChildViewById(rootView, id);
      if (buttonSaveStore == null) {
        break missingId;
      }

      id = R.id.button_view_saved;
      Button buttonViewSaved = ViewBindings.findChildViewById(rootView, id);
      if (buttonViewSaved == null) {
        break missingId;
      }

      id = R.id.edit_text_location;
      EditText editTextLocation = ViewBindings.findChildViewById(rootView, id);
      if (editTextLocation == null) {
        break missingId;
      }

      id = R.id.edit_text_store_name;
      EditText editTextStoreName = ViewBindings.findChildViewById(rootView, id);
      if (editTextStoreName == null) {
        break missingId;
      }

      id = R.id.history_recycler_view;
      RecyclerView historyRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (historyRecyclerView == null) {
        break missingId;
      }

      id = R.id.history_section;
      LinearLayout historySection = ViewBindings.findChildViewById(rootView, id);
      if (historySection == null) {
        break missingId;
      }

      id = R.id.input_section;
      LinearLayout inputSection = ViewBindings.findChildViewById(rootView, id);
      if (inputSection == null) {
        break missingId;
      }

      id = R.id.map_activity;
      FragmentContainerView mapActivity = ViewBindings.findChildViewById(rootView, id);
      if (mapActivity == null) {
        break missingId;
      }

      return new ActivityMapBinding((RelativeLayout) rootView, buttonPickLocation, buttonSaveStore,
          buttonViewSaved, editTextLocation, editTextStoreName, historyRecyclerView, historySection,
          inputSection, mapActivity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
