// Generated by view binder compiler. Do not edit!
package com.example.myrecipebook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myrecipebook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMapDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView AdrressName;

  @NonNull
  public final TextView StoreAdrress;

  @NonNull
  public final TextView StoreHours;

  @NonNull
  public final TextView StoreOpeningHours;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView titleName;

  @NonNull
  public final TextView titleNameStore;

  private ActivityMapDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView AdrressName, @NonNull TextView StoreAdrress, @NonNull TextView StoreHours,
      @NonNull TextView StoreOpeningHours, @NonNull LinearLayout linearLayout,
      @NonNull TextView titleName, @NonNull TextView titleNameStore) {
    this.rootView = rootView;
    this.AdrressName = AdrressName;
    this.StoreAdrress = StoreAdrress;
    this.StoreHours = StoreHours;
    this.StoreOpeningHours = StoreOpeningHours;
    this.linearLayout = linearLayout;
    this.titleName = titleName;
    this.titleNameStore = titleNameStore;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMapDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMapDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_map_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMapDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AdrressName;
      TextView AdrressName = ViewBindings.findChildViewById(rootView, id);
      if (AdrressName == null) {
        break missingId;
      }

      id = R.id.StoreAdrress;
      TextView StoreAdrress = ViewBindings.findChildViewById(rootView, id);
      if (StoreAdrress == null) {
        break missingId;
      }

      id = R.id.StoreHours;
      TextView StoreHours = ViewBindings.findChildViewById(rootView, id);
      if (StoreHours == null) {
        break missingId;
      }

      id = R.id.StoreOpeningHours;
      TextView StoreOpeningHours = ViewBindings.findChildViewById(rootView, id);
      if (StoreOpeningHours == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.titleName;
      TextView titleName = ViewBindings.findChildViewById(rootView, id);
      if (titleName == null) {
        break missingId;
      }

      id = R.id.titleNameStore;
      TextView titleNameStore = ViewBindings.findChildViewById(rootView, id);
      if (titleNameStore == null) {
        break missingId;
      }

      return new ActivityMapDetailBinding((ConstraintLayout) rootView, AdrressName, StoreAdrress,
          StoreHours, StoreOpeningHours, linearLayout, titleName, titleNameStore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
