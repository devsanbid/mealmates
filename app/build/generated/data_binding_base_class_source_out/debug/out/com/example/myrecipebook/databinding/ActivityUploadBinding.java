// Generated by view binder compiler. Do not edit!
package com.example.myrecipebook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import android.widget.ScrollView;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myrecipebook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUploadBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button addIngredientButton;

  @NonNull
  public final Button addStepButton;

  @NonNull
  public final Button buttonSelectImage;

  @NonNull
  public final Spinner categorySpinner;

  @NonNull
  public final EditText ingredientInput;

  @NonNull
  public final LinearLayout ingredientList;

  @NonNull
  public final NumberPicker prepTimePicker;

  @NonNull
  public final Button publishButton;

  @NonNull
  public final EditText recipeDescription;

  @NonNull
  public final ImageView recipeImagePreview;

  @NonNull
  public final EditText recipeTitle;

  @NonNull
  public final NumberPicker servesPicker;

  @NonNull
  public final EditText stepInput;

  @NonNull
  public final LinearLayout stepList;

  private ActivityUploadBinding(@NonNull ScrollView rootView, @NonNull Button addIngredientButton,
      @NonNull Button addStepButton, @NonNull Button buttonSelectImage,
      @NonNull Spinner categorySpinner, @NonNull EditText ingredientInput,
      @NonNull LinearLayout ingredientList, @NonNull NumberPicker prepTimePicker,
      @NonNull Button publishButton, @NonNull EditText recipeDescription,
      @NonNull ImageView recipeImagePreview, @NonNull EditText recipeTitle,
      @NonNull NumberPicker servesPicker, @NonNull EditText stepInput,
      @NonNull LinearLayout stepList) {
    this.rootView = rootView;
    this.addIngredientButton = addIngredientButton;
    this.addStepButton = addStepButton;
    this.buttonSelectImage = buttonSelectImage;
    this.categorySpinner = categorySpinner;
    this.ingredientInput = ingredientInput;
    this.ingredientList = ingredientList;
    this.prepTimePicker = prepTimePicker;
    this.publishButton = publishButton;
    this.recipeDescription = recipeDescription;
    this.recipeImagePreview = recipeImagePreview;
    this.recipeTitle = recipeTitle;
    this.servesPicker = servesPicker;
    this.stepInput = stepInput;
    this.stepList = stepList;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUploadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUploadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_upload, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUploadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addIngredientButton;
      Button addIngredientButton = ViewBindings.findChildViewById(rootView, id);
      if (addIngredientButton == null) {
        break missingId;
      }

      id = R.id.addStepButton;
      Button addStepButton = ViewBindings.findChildViewById(rootView, id);
      if (addStepButton == null) {
        break missingId;
      }

      id = R.id.button_select_image;
      Button buttonSelectImage = ViewBindings.findChildViewById(rootView, id);
      if (buttonSelectImage == null) {
        break missingId;
      }

      id = R.id.categorySpinner;
      Spinner categorySpinner = ViewBindings.findChildViewById(rootView, id);
      if (categorySpinner == null) {
        break missingId;
      }

      id = R.id.ingredientInput;
      EditText ingredientInput = ViewBindings.findChildViewById(rootView, id);
      if (ingredientInput == null) {
        break missingId;
      }

      id = R.id.ingredientList;
      LinearLayout ingredientList = ViewBindings.findChildViewById(rootView, id);
      if (ingredientList == null) {
        break missingId;
      }

      id = R.id.prepTimePicker;
      NumberPicker prepTimePicker = ViewBindings.findChildViewById(rootView, id);
      if (prepTimePicker == null) {
        break missingId;
      }

      id = R.id.publishButton;
      Button publishButton = ViewBindings.findChildViewById(rootView, id);
      if (publishButton == null) {
        break missingId;
      }

      id = R.id.recipeDescription;
      EditText recipeDescription = ViewBindings.findChildViewById(rootView, id);
      if (recipeDescription == null) {
        break missingId;
      }

      id = R.id.recipe_image_preview;
      ImageView recipeImagePreview = ViewBindings.findChildViewById(rootView, id);
      if (recipeImagePreview == null) {
        break missingId;
      }

      id = R.id.recipeTitle;
      EditText recipeTitle = ViewBindings.findChildViewById(rootView, id);
      if (recipeTitle == null) {
        break missingId;
      }

      id = R.id.servesPicker;
      NumberPicker servesPicker = ViewBindings.findChildViewById(rootView, id);
      if (servesPicker == null) {
        break missingId;
      }

      id = R.id.stepInput;
      EditText stepInput = ViewBindings.findChildViewById(rootView, id);
      if (stepInput == null) {
        break missingId;
      }

      id = R.id.stepList;
      LinearLayout stepList = ViewBindings.findChildViewById(rootView, id);
      if (stepList == null) {
        break missingId;
      }

      return new ActivityUploadBinding((ScrollView) rootView, addIngredientButton, addStepButton,
          buttonSelectImage, categorySpinner, ingredientInput, ingredientList, prepTimePicker,
          publishButton, recipeDescription, recipeImagePreview, recipeTitle, servesPicker,
          stepInput, stepList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
